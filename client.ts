/*
langfuse

## Authentication

Authenticate with the API using Basic Auth, get API keys in the project settings:

- username: Langfuse Public Key
- password: Langfuse Secret Key

The version of the OpenAPI document: 


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import { AxiosRequestConfig } from "axios";
import {
  DatasetItemsApi,
  DatasetRunItemsApi,
  DatasetsApi,
  HealthApi,
  IngestionApi,
  MetricsApi,
  ObservationsApi,
  ProjectsApi,
  PromptsApi,
  ScoreApi,
  SessionsApi,
  TraceApi,
} from "./api";
import { Configuration, ConfigurationParameters } from "./configuration";
import { LangfuseCustom } from "./client-custom";

export class Langfuse extends LangfuseCustom {
  readonly datasetItems: DatasetItemsApi;
  readonly datasetRunItems: DatasetRunItemsApi;
  readonly datasets: DatasetsApi;
  readonly health: HealthApi;
  readonly ingestion: IngestionApi;
  readonly metrics: MetricsApi;
  readonly observations: ObservationsApi;
  readonly projects: ProjectsApi;
  readonly prompts: PromptsApi;
  readonly score: ScoreApi;
  readonly sessions: SessionsApi;
  readonly trace: TraceApi;

  constructor(configurationParameters: ConfigurationParameters = {}) {
    super(configurationParameters);
    const configuration = new Configuration(configurationParameters);
    this.datasetItems = new DatasetItemsApi(configuration);
    this.datasetRunItems = new DatasetRunItemsApi(configuration);
    this.datasets = new DatasetsApi(configuration);
    this.health = new HealthApi(configuration);
    this.ingestion = new IngestionApi(configuration);
    this.metrics = new MetricsApi(configuration);
    this.observations = new ObservationsApi(configuration);
    this.projects = new ProjectsApi(configuration);
    this.prompts = new PromptsApi(configuration);
    this.score = new ScoreApi(configuration);
    this.sessions = new SessionsApi(configuration);
    this.trace = new TraceApi(configuration);
  }

}
