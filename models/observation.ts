/*
langfuse

## Authentication

Authenticate with the API using Basic Auth, get API keys in the project settings:

- username: Langfuse Public Key
- password: Langfuse Secret Key

The version of the OpenAPI document: 


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { MapValue } from './map-value';
import { ObservationLevel } from './observation-level';
import { Usage } from './usage';

/**
 * 
 * @export
 * @interface Observation
 */
export interface Observation {
    /**
     * 
     * @type {string}
     * @memberof Observation
     */
    'version'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Observation
     */
    'id': string;
    /**
     * 
     * @type {string}
     * @memberof Observation
     */
    'traceId'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Observation
     */
    'type': string;
    /**
     * 
     * @type {string}
     * @memberof Observation
     */
    'name'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Observation
     */
    'startTime': string;
    /**
     * 
     * @type {string}
     * @memberof Observation
     */
    'endTime'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Observation
     */
    'completionStartTime'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Observation
     */
    'model'?: string | null;
    /**
     * 
     * @type {{ [key: string]: MapValue; }}
     * @memberof Observation
     */
    'modelParameters'?: { [key: string]: MapValue; } | null;
    /**
     * 
     * @type {any}
     * @memberof Observation
     */
    'input'?: any | null;
    /**
     * 
     * @type {any}
     * @memberof Observation
     */
    'metadata'?: any | null;
    /**
     * 
     * @type {any}
     * @memberof Observation
     */
    'output'?: any | null;
    /**
     * 
     * @type {Usage}
     * @memberof Observation
     */
    'usage'?: Usage;
    /**
     * 
     * @type {ObservationLevel}
     * @memberof Observation
     */
    'level': ObservationLevel;
    /**
     * 
     * @type {string}
     * @memberof Observation
     */
    'statusMessage'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Observation
     */
    'parentObservationId'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Observation
     */
    'promptId'?: string | null;
}

